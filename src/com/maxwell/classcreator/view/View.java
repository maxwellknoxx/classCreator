package com.maxwell.classcreator.view;

import com.maxwell.classcreator.control.InputController;
import com.maxwell.classcreator.control.MessageController;
import com.maxwell.classcreator.model.Input;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileSystemView;

/**
 *
 * @author Maxwell Knoxx - 06/2019
 */
public class View extends javax.swing.JFrame {

    /**
     * Creates new form view
     */
    public View() {
        initComponents();
    }

    private void open() {
        JFileChooser jfc = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
        jfc.setDialogTitle("Please, select our root project folder!");
        jfc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);

        int returnValue = jfc.showSaveDialog(null);

        if (returnValue == JFileChooser.APPROVE_OPTION) {
            if (jfc.getSelectedFile().isDirectory()) {
                jTextFieldPath.setText(jfc.getSelectedFile().toString());
                System.out.println(jfc.getSelectedFile().toString());
            }
        }

    }

    private String getPath() {
        return jTextFieldPath.getText();
    }

    private String getClassName() {
        return jTextFieldClassName.getText();
    }

    private String getJsonText() {
        return jTextAreaInput.getText();
    }

    private Boolean isEntitySelected() {
        return jCheckBoxEntity.isSelected();
    }

    private Boolean isModelSelected() {
        return jCheckBoxModel.isSelected();
    }

    private Boolean isServiceImplSelected() {
        return jCheckBoxServiceImpl.isSelected();
    }

    private Boolean isRepositorySelected() {
        return jCheckBoxRepository.isSelected();
    }

    private Boolean pathFieldIsNotEmpty() {
        if (!jTextFieldPath.getText().isEmpty()) {
            return true;
        }
        MessageController.showErrorMessage("Please, select a path!");
        return false;
    }

    private Boolean classNameFieldIsNotEmpty() {
        if (!jTextFieldClassName.getText().isEmpty()) {
            return true;
        }
        MessageController.showErrorMessage("Please, fill the class name field");
        return false;
    }

    private boolean inputFieldIsNotEmpty() {
        if (!jTextAreaInput.getText().isEmpty()) {
            return true;
        }
        MessageController.showErrorMessage("Please, fill the Json field");
        return false;
    }

    private void createFiles() {
        InputController inputController = new InputController();
        Input input = new Input();

        input.setPath(getPath());
        input.setClassName(getClassName());
        input.setText(getJsonText());
        input.setCreateEntity(isEntitySelected());
        input.setCreateModel(isModelSelected());
        input.setCreateServiceImpl(isServiceImplSelected());
        input.setCreateRepository(isRepositorySelected());

        inputController.generateFiles(input);
        MessageController.showMessage("The files were created!");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelPath = new javax.swing.JLabel();
        jTextFieldPath = new javax.swing.JTextField();
        jButtonBrowse = new javax.swing.JButton();
        jLabelInput = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaInput = new javax.swing.JTextArea();
        jCheckBoxEntity = new javax.swing.JCheckBox();
        jCheckBoxModel = new javax.swing.JCheckBox();
        jCheckBoxServiceImpl = new javax.swing.JCheckBox();
        jCheckBoxRepository = new javax.swing.JCheckBox();
        jButtonCreate = new javax.swing.JButton();
        jLabelName = new javax.swing.JLabel();
        jLabelClass = new javax.swing.JLabel();
        jTextFieldClassName = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelPath.setText("Path: ");
        getContentPane().add(jLabelPath, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, -1));

        jTextFieldPath.setText("/Users/Macbook/Documents");
        getContentPane().add(jTextFieldPath, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, 240, -1));

        jButtonBrowse.setText("Browse");
        jButtonBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBrowseActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonBrowse, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 50, -1, -1));

        jLabelInput.setText("Input");
        getContentPane().add(jLabelInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, -1, -1));

        jTextAreaInput.setColumns(20);
        jTextAreaInput.setRows(5);
        jTextAreaInput.setText("\"String\": \"value\",\n\"String\": \"value\",\n\"String\": \"value\"\n");
        jScrollPane1.setViewportView(jTextAreaInput);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 350, 160));

        jCheckBoxEntity.setText("Entity");
        getContentPane().add(jCheckBoxEntity, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 320, -1, -1));

        jCheckBoxModel.setText("Model");
        getContentPane().add(jCheckBoxModel, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 320, -1, -1));

        jCheckBoxServiceImpl.setText("Service/Impl");
        getContentPane().add(jCheckBoxServiceImpl, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 320, -1, -1));

        jCheckBoxRepository.setText("Repository");
        getContentPane().add(jCheckBoxRepository, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 320, -1, -1));

        jButtonCreate.setText("Create");
        jButtonCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreateActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonCreate, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 350, -1, -1));

        jLabelName.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jLabelName.setText("CLASS CREATOR 2000 PLUS");
        getContentPane().add(jLabelName, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 20, -1, -1));

        jLabelClass.setText("Class:");
        getContentPane().add(jLabelClass, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, -1, -1));

        jTextFieldClassName.setText("People");
        getContentPane().add(jTextFieldClassName, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 90, 230, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreateActionPerformed
        if (pathFieldIsNotEmpty()) {
            if (classNameFieldIsNotEmpty()) {
                if (inputFieldIsNotEmpty()) {
                    createFiles();
                }
            }
        }
    }//GEN-LAST:event_jButtonCreateActionPerformed

    private void jButtonBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBrowseActionPerformed
        open();
    }//GEN-LAST:event_jButtonBrowseActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                View view = new View();
                view.setResizable(false);
                view.setLocationRelativeTo(null);
                view.setTitle("Class creator");
                view.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBrowse;
    private javax.swing.JButton jButtonCreate;
    private javax.swing.JCheckBox jCheckBoxEntity;
    private javax.swing.JCheckBox jCheckBoxModel;
    private javax.swing.JCheckBox jCheckBoxRepository;
    private javax.swing.JCheckBox jCheckBoxServiceImpl;
    private javax.swing.JLabel jLabelClass;
    private javax.swing.JLabel jLabelInput;
    private javax.swing.JLabel jLabelName;
    private javax.swing.JLabel jLabelPath;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaInput;
    private javax.swing.JTextField jTextFieldClassName;
    private javax.swing.JTextField jTextFieldPath;
    // End of variables declaration//GEN-END:variables

}
